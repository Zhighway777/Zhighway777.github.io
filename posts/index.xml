<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Zeng::blog</title>
    <link>https://zhighway777.github.io/posts/</link>
    <description>Recent content in Posts on Zeng::blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 09 Jan 2025 21:45:10 +0800</lastBuildDate><atom:link href="https://zhighway777.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Archtecture Keywords</title>
      <link>https://zhighway777.github.io/2025/01/09/arch_keywords/</link>
      <pubDate>Thu, 09 Jan 2025 21:45:10 +0800</pubDate>
      
      <guid>https://zhighway777.github.io/2025/01/09/arch_keywords/</guid>
      <description>HBM &amp;amp; DDR &amp;amp; SDRAM &amp;amp; DRAM https://m.huxiu.com/article/3047123.html HBM (High Bandwidth Memory) Defination: It has stacked DRAM architecture with core DRAM dies on top of a base logic die, based on the TSV and die stacking technologies. Technology[edit] Type Release Max data rate speed per pin(Gbit/s) Stack per Stack per Stack - - - - Max capacity(Number of dies × Die capacity = GByte) Max data rate(GByte/s) HBM 1 Oct</description>
    </item>
    
    <item>
      <title>AI Agentic Workflow</title>
      <link>https://zhighway777.github.io/2024/11/05/ai_agentic_workflow/</link>
      <pubDate>Tue, 05 Nov 2024 22:06:01 +0800</pubDate>
      
      <guid>https://zhighway777.github.io/2024/11/05/ai_agentic_workflow/</guid>
      <description>Why do this? Now, the apperance of LLM model such as GPT-4, llama3 has brought breakthroughs in the field of AI. However, the tradional LLM interaction is more like a &amp;ldquo;Non-agent workflow&amp;rdquo;, where users input the instructions and wait for the output after some time. This lack of room for iterative optimization. AI Agent breaks the deadlock by treating the AI-system as one could think, plan and perform tasks, just</description>
    </item>
    
    <item>
      <title>Python Advanced Skills</title>
      <link>https://zhighway777.github.io/2024/10/15/python_advance/</link>
      <pubDate>Tue, 15 Oct 2024 20:39:53 +0800</pubDate>
      
      <guid>https://zhighway777.github.io/2024/10/15/python_advance/</guid>
      <description>Useful tools pytest Advanced methods yield 如果一个函数中使用yield来修饰一变量，那么这个函数会作为一个generate(), 当调用此函数的时候，并不会运行此函数，而是</description>
    </item>
    
    <item>
      <title>Brief Discussion on Modeling for Performance Analysis</title>
      <link>https://zhighway777.github.io/2024/10/12/performance_analysis/</link>
      <pubDate>Sat, 12 Oct 2024 22:31:36 +0800</pubDate>
      
      <guid>https://zhighway777.github.io/2024/10/12/performance_analysis/</guid>
      <description>Perform, then Performance When the Performance mentioned, there are always related tasks with it. The range of a task can be wide. From basic compute units like ADD, MUL, to more complex operation, such as convolution, FFT. Morever, DNN, transformer model can also be a task. The essence of Performance is the run time for completing a task.
The perspective form Instructions. For a Turing Machine, the task will be broken down into a series of instructions.</description>
    </item>
    
    <item>
      <title>Python Object Oriented Programming</title>
      <link>https://zhighway777.github.io/2024/10/09/python_oop/</link>
      <pubDate>Wed, 09 Oct 2024 20:39:53 +0800</pubDate>
      
      <guid>https://zhighway777.github.io/2024/10/09/python_oop/</guid>
      <description>OOP Here is a classical picture: Although is funny, it actually describes the OOP concept. Class: A set to describe which has the same attributes and methods. Object: is the instance of a class Class variables: Public in its instance object, usually are defined beyond function in a class. Data members: Class members and Object members Rewrite method: A original method inherited from thee parent class can be modified if</description>
    </item>
    
    <item>
      <title>Python Simple Tutorial</title>
      <link>https://zhighway777.github.io/2024/10/04/python_simple_tutorial/</link>
      <pubDate>Fri, 04 Oct 2024 20:25:10 +0800</pubDate>
      
      <guid>https://zhighway777.github.io/2024/10/04/python_simple_tutorial/</guid>
      <description>Common Functions 在这里简单的介绍一下python的函数是有必要的。 在python中，存在很多内置函数，可以直接使用，如print()函数。用户也可以自行</description>
    </item>
    
    <item>
      <title>Computer network common concepts</title>
      <link>https://zhighway777.github.io/2024/10/04/computer_network_common_concepts/</link>
      <pubDate>Fri, 04 Oct 2024 18:08:34 +0800</pubDate>
      
      <guid>https://zhighway777.github.io/2024/10/04/computer_network_common_concepts/</guid>
      <description>Instances There is a Website: http://mail.163.com/index.html http:// HTTP is an application layer protocol in the internet protocol suite model. This is a stateless application-level protocol, so it requires a reliable network transport connection to ecxhange data between client and server. In HTTP, TCP/IP are used to use port 80(if connection is unencrypted) or 443(encrypted) mail This is a server name, which respresents a email server. 163.com This is a Domain</description>
    </item>
    
    <item>
      <title>Cpp Learning Recording(0)</title>
      <link>https://zhighway777.github.io/2024/09/29/cpp_learning_0/</link>
      <pubDate>Sun, 29 Sep 2024 19:39:48 +0800</pubDate>
      
      <guid>https://zhighway777.github.io/2024/09/29/cpp_learning_0/</guid>
      <description>Essential C++ 笔记</description>
    </item>
    
    <item>
      <title>Hugo custom</title>
      <link>https://zhighway777.github.io/2024/09/28/hugo_custom/</link>
      <pubDate>Sat, 28 Sep 2024 20:24:41 +0800</pubDate>
      
      <guid>https://zhighway777.github.io/2024/09/28/hugo_custom/</guid>
      <description>在Hugo的Markdown中直接插入HTML 方法：使用hugo shortcode实现 hugo处理短代码时，首先搜索layouts/shor</description>
    </item>
    
    <item>
      <title>TPU MLIR Recording(0)</title>
      <link>https://zhighway777.github.io/2024/09/28/tpu-mlir-recording/</link>
      <pubDate>Sat, 28 Sep 2024 19:46:46 +0800</pubDate>
      
      <guid>https://zhighway777.github.io/2024/09/28/tpu-mlir-recording/</guid>
      <description>To be continue</description>
    </item>
    
    <item>
      <title>Buddy Compiler 源码解读(2)</title>
      <link>https://zhighway777.github.io/2024/09/27/buddy_src_2/</link>
      <pubDate>Fri, 27 Sep 2024 13:19:05 +0800</pubDate>
      
      <guid>https://zhighway777.github.io/2024/09/27/buddy_src_2/</guid>
      <description>Bud Dialect 有了之前的例子作为支撑，我们可以深入相关的Dialect, 分析Buddy Compiler是如何进行Lowering, Conversati</description>
    </item>
    
    <item>
      <title>Docker tutorial</title>
      <link>https://zhighway777.github.io/2024/09/26/docker_tutorial/</link>
      <pubDate>Thu, 26 Sep 2024 20:08:03 +0800</pubDate>
      
      <guid>https://zhighway777.github.io/2024/09/26/docker_tutorial/</guid>
      <description>Introduction Background To compulate TPU-MLIR project, I have to learn docker for env isolation. The most troublesome thing is environment configuration when we are doing software development. The user must ensure two things:The correct setting of OS and the installation of various libraries and components(dependences).However, the process of installing is painful. Docker may slove the problem fundamentally.Its core idea is : &amp;ldquo;Package the application and its dependencies into one file&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Top Architecture Labs</title>
      <link>https://zhighway777.github.io/2024/09/09/top_lab/</link>
      <pubDate>Mon, 09 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>https://zhighway777.github.io/2024/09/09/top_lab/</guid>
      <description>You can download the CSV file here: Download CSV 体系结构 TOP实验室 国外 /* cspell:disable-file */ /* webkit printing magic: print all background colors */ html { -webkit-print-color-adjust: exact; } * { box-sizing: border-box; -webkit-print-color-adjust: exact; } html, body { margin: 0; padding: 0; } @media only screen { body { margin: 2em auto; max-width: 900px; color: rgb(55, 53, 47); } }</description>
    </item>
    
    <item>
      <title>Buddy Compiler 源码解读(0)</title>
      <link>https://zhighway777.github.io/2024/09/06/buddy_src_0/</link>
      <pubDate>Fri, 06 Sep 2024 23:23:03 +0800</pubDate>
      
      <guid>https://zhighway777.github.io/2024/09/06/buddy_src_0/</guid>
      <description>Compiler Arch 截止目前（2024/9）buddy compiler已经明显将编译器根据功能划分为Frontend-前端， Midend-中端， Backen</description>
    </item>
    
    <item>
      <title>Buddy Compiler 源码解读(1)</title>
      <link>https://zhighway777.github.io/2024/09/06/buddy_src_1/</link>
      <pubDate>Fri, 06 Sep 2024 23:23:03 +0800</pubDate>
      
      <guid>https://zhighway777.github.io/2024/09/06/buddy_src_1/</guid>
      <description>Examples 解读 首先解读关于： BudDialect, GemminiDialect, MLIRMemRef, MLIRTensor, RVVDialect, ToyDSL BudDialect 首先打开makefile 看能执行那些make操作。 bud-constant.mlir module { // CHECK: %{{.*}} = arith.constant 0 : i32 %i0 = bud.test_constant : i32 } 执行make bud-c</description>
    </item>
    
    <item>
      <title>How to build personal website</title>
      <link>https://zhighway777.github.io/2024/09/05/my-first-post/</link>
      <pubDate>Thu, 05 Sep 2024 10:52:39 +0800</pubDate>
      
      <guid>https://zhighway777.github.io/2024/09/05/my-first-post/</guid>
      <description>Introduction 第一篇博客用于记录博客的搭建过程 模板 博客使用hugo工具进行搭建与管理，hugo提供了丰富的tamplates,同时，其draft功能使得</description>
    </item>
    
  </channel>
</rss>
