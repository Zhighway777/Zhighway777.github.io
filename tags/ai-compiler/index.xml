<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AI Compiler on Zeng::blog</title>
    <link>https://zhighway777.github.io/tags/ai-compiler/</link>
    <description>Recent content in AI Compiler on Zeng::blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 27 Sep 2024 13:19:05 +0800</lastBuildDate><atom:link href="https://zhighway777.github.io/tags/ai-compiler/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Buddy Compiler 源码解读(2)</title>
      <link>https://zhighway777.github.io/2024/09/27/buddy_src_2/</link>
      <pubDate>Fri, 27 Sep 2024 13:19:05 +0800</pubDate>
      
      <guid>https://zhighway777.github.io/2024/09/27/buddy_src_2/</guid>
      <description>Bud Dialect 有了之前的例子作为支撑，我们可以深入相关的Dialect, 分析Buddy Compiler是如何进行Lowering, Conversati</description>
    </item>
    
    <item>
      <title>Buddy Compiler 源码解读(0)</title>
      <link>https://zhighway777.github.io/2024/09/06/buddy_src_0/</link>
      <pubDate>Fri, 06 Sep 2024 23:23:03 +0800</pubDate>
      
      <guid>https://zhighway777.github.io/2024/09/06/buddy_src_0/</guid>
      <description>Compiler Arch 截止目前（2024/9）buddy compiler已经明显将编译器根据功能划分为Frontend-前端， Midend-中端， Backen</description>
    </item>
    
    <item>
      <title>Buddy Compiler 源码解读(1)</title>
      <link>https://zhighway777.github.io/2024/09/06/buddy_src_1/</link>
      <pubDate>Fri, 06 Sep 2024 23:23:03 +0800</pubDate>
      
      <guid>https://zhighway777.github.io/2024/09/06/buddy_src_1/</guid>
      <description>Examples 解读 首先解读关于： BudDialect, GemminiDialect, MLIRMemRef, MLIRTensor, RVVDialect, ToyDSL BudDialect 首先打开makefile 看能执行那些make操作。 bud-constant.mlir module { // CHECK: %{{.*}} = arith.constant 0 : i32 %i0 = bud.test_constant : i32 } 执行make bud-c</description>
    </item>
    
  </channel>
</rss>
