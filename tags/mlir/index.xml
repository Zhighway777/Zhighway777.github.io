<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MLIR on Zeng::blog</title>
    <link>https://zhighway777.github.io/tags/mlir/</link>
    <description>Recent content in MLIR on Zeng::blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 06 Sep 2024 23:23:03 +0800</lastBuildDate><atom:link href="https://zhighway777.github.io/tags/mlir/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Buddy Compiler 源码解读</title>
      <link>https://zhighway777.github.io/posts/pageexample/</link>
      <pubDate>Fri, 06 Sep 2024 23:23:03 +0800</pubDate>
      
      <guid>https://zhighway777.github.io/posts/pageexample/</guid>
      <description>Frontend 此文件夹包含Buddy的前端框架，包括FrontendGen前端代码生成、Interfaces接口文件和Python(功能未知)。
FrontendGen FrontendGen中包含的库文件为：CGModule.cpp Diagnostics.cpp Lexer.cpp Parser.cpp Sema.cpp 在外层有一个编译器前端的驱动程序frontendgen.cpp 通过分析输入文件来构建 AST和其他相关文件。
输入参数：使用LLVM的 CommandLine库解析 输入文件名和输出文件类型
文件处理：使用自定义的Lexer, Parser,CGModule 进行代码分析
结果生成：调用emit函数输出AST、ANTLR、Visitor等文件
Inferfaces buddy/core/Container.h
定义了MemRef class 模板作为Memory reference的descriptor。 其作用是管理memory中的多维矩阵，提供类似于ML或者Numerical中的Tensor的功能
DIP/ImageContainer.h
用于处理多维图像的容器，提供了各种构造函数(constructors)和功能模块(functionalities)来直接或者间接的处理图像数据
DAP/AudioContainer.h
用于处理视频数据
LLM/TextContainer.h
用于处理BERT,LLAMA等NLP模型的文本token数据
提供了加载词汇表、将文本处理成令牌以及有效管理内存以处理变长文本数据的方法。该类包括动态内存调整大小、处理多字节字符以及将标记化序列转换回可读文本的机制
python/frontend.py ⭐⭐
实现了一个 DynamoCompiler class，作为Buddy-compiler的前端，可以将Pytorch的FX Graph 转换为等价的Buddy Graph和MLIR module，用于在MLIR中运行
  初始化编译器，导pytorch模型
  数据类型转换，将pytorch数据类型转换为buddy中的 TensorDType 枚举类型
def _torch_dtype_translate(self, dtype): match dtype: case &amp;#34;torch.int64&amp;#34;: return TensorDType.Int64 case &amp;#34;torch.int32&amp;#34;: return TensorDType.Int32 case &amp;#34;torch.float16&amp;#34;: return TensorDType.Float16 case &amp;#34;torch.float32&amp;#34;: return TensorDType.Float32 case &amp;#34;torch.</description>
    </item>
    
  </channel>
</rss>
